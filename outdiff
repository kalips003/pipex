diff --color -r ../push_swap_git/lib/ft_printf/ft_printf.c lib/ft_printf/ft_printf.c
6c6
< /*   By: agallon <marvin@42.fr>                     +#+  +:+       +#+        */
---
> /*   By: marvin <marvin@student.42.fr>              +#+  +:+       +#+        */
9c9
< /*   Updated: 2024/05/13 19:14:14 by agallon          ###   ########.fr       */
---
> /*   Updated: 2024/06/11 18:32:07 by marvin           ###   ########.fr       */
13a14
> #include "libft.h"
55,56c56
< 	if (g_function_pointer[wii_print(f.flag)])
< 		rtrn = g_function_pointer[wii_print(f.flag)](args, &f);
---
> 	rtrn = g_function_pointer[wii_print(f.flag)](args, &f);
119a120,145
> 
> 
> /*******************************************************************************
>  * 		PRINT CAT RANDOM COLOR
> *******************************************************************************/
> void	ft_print_cat(int num,  char *string2, int cls)
> {
> 	int color1;
> 	int color2;
> 	int color3;
> 
> 	color1 = (int)(rand() % (255  + 1));
> 	color2 = (int)(rand() % (255  + 1));
> 	color3 = (int)(rand() % (255  + 1));
> 
> 	if (cls)
> 		put(CLS);
> 	put("\n\033[38;5;%dm\
> 	\tにゃ~\033[38;5;%dm\t⠀╱|、\n\
> 	\t\t(˚ˎ。7⠀⠀⠀\033[38;5;%dm~ %d ~\033[38;5;%dm\n\
> 	\t\t⠀|、˜\\\t\t\t\033[38;5;%dm~ %s\033[38;5;%dm\n\
> 	\t\t⠀じしˍ)ノ\n", \
> 	color2, color1, color2, num, color1, color2, string2, color1);
> 	put(BLINK "\033[38;5;%dm\n\t\t>>>  PRISS ENTER TO CONTINUE  <<<\n"RESET, color3);
> 	free_333(gnl(0));
> }
\ No newline at end of file
diff --color -r ../push_swap_git/lib/ft_printf/ft_string.c lib/ft_printf/ft_string.c
15,21c15,23
< //////////////////////////////////////////////////////
< //  #   join the read bits
< //  bit 10 = begin malloc'd
< //  bit  1 = append malloc'd
< // 	if size = 0, join full size
< // 		always return at least a '\0' that can be free
< // 		return NULL on error
---
> ///////////////////////////////////////////////////////////////////////////////]
> /*******************************************************************************
>  #   join the read bits
>  	if bit 10 = begin is malloc'd
>  	if bit 01 = append is malloc'd
> 	if size = 0, join full size
> 		always return at least a '\0' that can be free
> 		return NULL on error
> *******************************************************************************/
30c32
< 	i = ft_strlen(append);
---
> 	i = ft_strlen666(append);
32c34
< 	str = (char *)malloc(ft_strlen(begin) + size + 1);
---
> 	str = (char *)malloc(ft_strlen666(begin) + size + 1);
108,109c110,116
< ////////////////////////////////////////////////////////////
< //	#
---
> ///////////////////////////////////////////////////////////////////////////////]
> /*******************************************************************************
> 	(char *)printf
> 		return NULL on error
> *******************************************************************************/
> //	#	(char *)printf
> 
127,130d133
< 		// {
< 		// 	rtrn = join(rtrn, &str[i], 0b10, 1);
< 		// 	i++;
< 		// }
Only in lib/ft_printf: print_cpdiu.c
diff --color -r ../push_swap_git/lib/ft_printf/print_e+.c lib/ft_printf/print_e+.c
6c6
< /*   By: agallon <marvin@42.fr>                     +#+  +:+       +#+        */
---
> /*   By: marvin <marvin@student.42.fr>              +#+  +:+       +#+        */
9c9
< /*   Updated: 2024/05/13 18:58:56 by agallon          ###   ########.fr       */
---
> /*   Updated: 2024/06/11 19:23:22 by marvin           ###   ########.fr       */
35c35
< // [ % S ] > spacing
---
> // [ % S ] > spacing, show white space
37c37
< // [ %.*S ] > color sizeof (bit)
---
> // [ %.*S ] > \n sizeof (bit)
45a46,69
> 	str = va_arg(args, char *);
> 	if (!str)
> 		return (put(BLINK REVERSE "NULL" RESET) - 12);
> 	i = -1;
> 	while (++i < f->width || (!f->width && str[i]))
> 	{
> 		if (f->preci && i % f->preci == 0)
> 			put(RESET"\n");
> 		put("\033[38;5;0;48;5;%um", ((unsigned char)str[i] + 128 * (f->plus)) % 256);
> 		if (f->hash)
> 			f->size += put("%.*x", 2 - f->minus, (unsigned char)str[i]);
> 		else
> 			f->size += put("%c", str[i]);
> 		if (f->space)
> 		f->size += put(" ");
> 	}
> 	put(RESET);
> 	return (f->size);
> }
> 
> /*{		ARCHIVES ft_string_hexa, highlight in color of precision
> 	char	*str;
> 	int		i;
> 
64,65c88
< }
< 
---
> }*/
67c90,92
< int	ft_tab(va_list args, t_flags *flags)
---
> // [ %.*S ] > put * \t in front of the tab
> // [ %-S ] > dont put \n after each line (for gnl return)
> int	ft_tab(va_list args, t_flags *f)
77,78c102,104
< 		flags->size += put("%s\n", tab[i]);
< 	return (flags->size);
---
> 		// f->size += put("%s\n", tab[i]);
> 		f->size += put("%.*c%s%.*c", f->preci, '\t', tab[i], f->minus, '\n');
> 	return (f->size);
diff --color -r ../push_swap_git/lib/ft_printf/print_scpdu.c lib/ft_printf/print_scpdu.c
24c24
< 	size = ft_strlen(str);
---
> 	size = ft_strlen666(str);
diff --color -r ../push_swap_git/lib/ft_printf/string_scdx.c lib/ft_printf/string_scdx.c
90c90
< 	f->tmp_a = ft_strlen(base);
---
> 	f->tmp_a = ft_strlen666(base);
diff --color -r ../push_swap_git/lib/ft_printf/tool.c lib/ft_printf/tool.c
17c17
< int	ft_strlen(char *str)
---
> int	ft_strlen666(char *str)
diff --color -r ../push_swap_git/lib/ft_printf/tools_print.c lib/ft_printf/tools_print.c
33c33
< 	if (i < ft_strlen(char_set))
---
> 	if (i < ft_strlen666(char_set))
46c46
< 	size = ft_strlen(base);
---
> 	size = ft_strlen666(base);
diff --color -r ../push_swap_git/lib/ft_printf/tools_unsigned.c lib/ft_printf/tools_unsigned.c
6c6
< /*   By: agallon <marvin@42.fr>                     +#+  +:+       +#+        */
---
> /*   By: marvin <marvin@student.42.fr>              +#+  +:+       +#+        */
9c9
< /*   Updated: 2023/12/09 15:50:33 by agallon          ###   ########.fr       */
---
> /*   Updated: 2024/06/11 18:27:40 by marvin           ###   ########.fr       */
81c81
< 	size = ft_strlen(base);
---
> 	size = ft_strlen666(base);
86a87,93
> 
> void	*free_333(void *ptr)
> {
> 	if (ptr)
> 		free(ptr);
> 	return (NULL);
> }
\ No newline at end of file
